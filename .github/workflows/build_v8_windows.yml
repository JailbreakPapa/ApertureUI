name: Build V8 for Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies (1st attempt)
        run: |
          choco install git visualstudio2019buildtools ninja -y

      - name: Set up depot tools
        run: |
          cd %GITHUB_WORKSPACE%
          echo %GITHUB_WORKSPACE%
          echo %PATH%

          git config --global core.autocrlf false
          git config --global core.filemode false
          git config --global branch.autosetuprebase always
          git config --global core.longpaths true
          git config --global depot-tools.allowGlobalGitConfig true
          set DEPOT_TOOLS_WIN_TOOLCHAIN=0

          curl https://storage.googleapis.com/chrome-infra/depot_tools.zip --output ./depot_tools.zip
          7z x -odepot_tools depot_tools.zip
          set PATH=%GITHUB_WORKSPACE%\depot_tools;%PATH%
          cd depot_tools
          gclient
        shell: cmd
        
      - name: Add to PATH
        uses: shimataro/path-action@v2
        with:
          add-path: ${{ github.workspace }}/depot_tools
          
      - name: Pull V8 source at specified commit
        shell: cmd
        run: |
          cd %GITHUB_WORKSPACE%
          echo %PATH%
          echo __CALLING_GCLIENT_CONFIG__
          gclient config https://chromium.googlesource.com/v8/v8
          mkdir v8_work && cd v8_work
          gclient sync --revision src@458ba60046610bfc1251d10f671c6d1e99052cfd
          
      - name: Build V8
        shell: cmd
        run: |
          cd v8
          python tools/dev/v8gen.py x64.release
          gn gen out.gn/x64.release --args="is_debug=false target_os=\"win\" target_cpu=\"x64\" is_component_build=true"
          ninja -C out.gn/x64.release x64.release

      - name: Archive artifacts
        run: |
          cd out.gn/x64.release
          tar -czvf v8-windows-build.tar.gz Release

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: v8-windows-build
          path: v8/out/v8-windows-build.tar.gz
